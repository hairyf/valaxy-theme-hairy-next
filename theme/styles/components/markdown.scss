@forward 'valaxy/client/styles/mixins/index.scss';

.markdown-body {
  --c-toc-link: var(--hy-c-text-light);
}

html.dark {
  .markdown-body {
    --c-toc-link: var(--hy-c-text-dark);
  }
}

.markdown-body {
  word-wrap: break-word;

  h2,
  a {
    color: var(--hy-c-primary);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--hy-font-serif);
    font-weight: 900;
  }

  ul {
    li>p {
      margin-bottom: 0;
    }
  }
}


.markdown-body :not(pre)>code {
  padding: 3px 6px;
  font-size: 0.85rem;
  color: var(--hy-c-text-code);
  background: var(--hy-c-bg-mute);
  border-radius: 3px;
}

.markdown-body div[class*=language-] pre {
  max-width: calc(100vw - 56px);
}

.markdown-body div[class*=language-] {
  width: 100%;
}

@media screen and (max-width: 640px) {
  .markdown-body div[class*=language-] {
    margin: auto;
  }
}


.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::before,
.prose :where(:not(pre) > code):not(:where(.not-prose, .not-prose *))::after {
  content: none !important;
}

.custom-block.tip {
  background-color: rgba(200, 200, 200, 0.1);
  border-color: var(--hy-c-primary);
  padding: 0.5rem 1rem;
}

.markdown-body {
  --un-prose-borders: var(--hy-c-primary);
}

.markdown-body div[class*=language-] pre {
  max-width: none;
}

.prose :where(blockquote):not(:where(.not-prose, .not-prose *)) {
  background: rgba(200, 200, 200, 0.1);
  @apply py-1px;

  font-size: 15px;

  >p {
    margin: 0.5rem 0;
  }
}